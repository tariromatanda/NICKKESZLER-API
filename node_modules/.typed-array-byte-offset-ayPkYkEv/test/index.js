'use strict';

var test = require('tape');
var typedArrayByteOffset = require('../');
var isCallable = require('is-callable');
var generators = require('make-generator-function')();
var arrowFn = require('make-arrow-function')();
var forEach = require('for-each');
var inspect = require('object-inspect');

var typedArrayNames = require('possible-typed-array-names');

test('not arrays', function (t) {
	t.test('non-number/string primitives', function (st) {
		// @ts-expect-error
		st.equal(false, typedArrayByteOffset(), 'undefined is not typed array');
		st.equal(false, typedArrayByteOffset(null), 'null is not typed array');
		st.equal(false, typedArrayByteOffset(false), 'false is not typed array');
		st.equal(false, typedArrayByteOffset(true), 'true is not typed array');
		st.end();
	});

	t.equal(false, typedArrayByteOffset({}), 'object is not typed array');
	t.equal(false, typedArrayByteOffset(/a/g), 'regex literal is not typed array');
	t.equal(false, typedArrayByteOffset(new RegExp('a', 'g')), 'regex object is not typed array');
	t.equal(false, typedArrayByteOffset(new Date(